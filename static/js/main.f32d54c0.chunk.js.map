{"version":3,"sources":["components/contacts/ContactList.jsx","components/contactForm/ContactForm.jsx","components/filter/Filter.jsx","App.jsx","index.js"],"names":["ContactList","contacts","onDeleteContacts","className","map","id","name","number","type","onClick","ContactForm","state","handleInputChanged","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","pattern","title","onChange","required","React","Component","Filter","App","initialContacts","filter","FormSubmitHandler","find","contact","toLowerCase","alert","AddContact","shortid","generate","deleteContacts","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","includes","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f32d54c0.chunk.js","sourcesContent":["import './ContactList.scss';\nimport PropTypes from 'prop-types';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <ul className=\"ContactList\">\n    {contacts.map(({ id, name, number }) => (\n      <li key={id}>\n        <p>\n          {name}\n          <span>{number}</span>\n        </p>\n\n        <button type=\"button\" onClick={() => onDeleteContacts(id)}>\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default ContactList;\n","import React from 'react';\nimport './ContactForm.scss';\nimport PropTypes from 'prop-types';\n\nclass ContactForm extends React.Component {\n  state = {\n    id: '',\n    name: '',\n    number: '',\n  };\n\n  handleInputChanged = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className=\"ContactForm\" onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            value={this.state.name}\n            onChange={this.handleInputChanged}\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            value={this.state.number}\n            onChange={this.handleInputChanged}\n            required\n          />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport './Filter.scss';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className=\"Filter\">\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from 'react';\nimport shortid from 'shortid';\nimport './App.css';\nimport ContactList from './components/contacts/ContactList';\nimport initialContacts from './contacts.json';\nimport ContactForm from './components/contactForm/ContactForm';\nimport Filter from './components/filter/Filter';\n\nclass App extends React.Component {\n  state = {\n    contacts: initialContacts,\n    filter: '',\n  };\n\n  FormSubmitHandler = ({ name, number }) => {\n    const { contacts } = this.state;\n    const findContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    if (findContact) {\n      alert(`${name} is already in contacts.`);\n    } else {\n      const AddContact = {\n        id: shortid.generate(),\n        name: name,\n        number: number,\n      };\n      this.setState(({ contacts }) => ({\n        contacts: [AddContact, ...contacts],\n      }));\n    }\n  };\n\n  deleteContacts = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.FormSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContacts={this.deleteContacts}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}